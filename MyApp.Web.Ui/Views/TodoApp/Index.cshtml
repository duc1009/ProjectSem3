
@model MyApp.Web.Ui.Panigation.PaginatedList<MyApp.Application.ViewModels.TodoAppViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<div class="row">
    <div class="col-lg-10">
        <p>
            <a asp-action="Create">Create New</a>
        </p>
    </div>
    <div class="col-lg-2">
        <p>
            <a asp-action="Excel" class="btn btn-primary">Export Excel</a>
        </p>
    </div>
</div>
<div class="row">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.First().Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Content)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().CreatedAt)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().FinishedAt)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Reported)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Description)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Content)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedAt)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FinishedAt)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Reported)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.ActionLink("Report", "Report", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       class="btn btn-default @nextDisabled">
        Next
    </a>
</div>

